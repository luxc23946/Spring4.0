<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 1 创建目标类 -->
<bean id="arithmeticCalculator" class="hpe.lxc.spring.aop_factorybean.ArithmeticCalculatorImpl"/>

<!-- 2 创建切面类 -->
<bean id="loggingAspect" class="hpe.lxc.spring.aop_factorybean.LoggingAspect"/>

<!-- 3 创建代理类-->
<!-- 
		* 使用工厂bean FactoryBean ，底层调用 getObject() 返回特殊bean
		* ProxyFactoryBean 用于创建代理工厂bean，生成特殊代理对象
			interfaces : 确定接口们
				通过<array>可以设置多个值
				只有一个值时，value=""
			target : 确定目标类
			interceptorNames : 通知切面类的名称，类型String[]，如果设置一个值 value=""
			optimize :强制使用cglib
				<property name="optimize" value="true"/>
		底层机制
			如果目标类有接口，采用jdk动态代理
			如果没有接口，采用cglib 字节码增强
			如果声明 optimize = true ，无论是否有接口，都采用cglib
	-->
<bean id="proxyArithmeticCalculator" class="org.springframework.aop.framework.ProxyFactoryBean">
  <property name="interfaces" value="hpe.lxc.spring.aop_factorybean.ArithmeticCalculator"/>
  <property name="target" ref="arithmeticCalculator"/>
  <property name="interceptorNames" value="loggingAspect"/>
  <property name="optimize" value="false"/>
</bean>

</beans>
